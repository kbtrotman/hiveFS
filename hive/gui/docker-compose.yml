
services:
  filestore:
    build:
      context: .                # gui/
      dockerfile: ../Dockerfile.filestore
    container_name: hive-filestore
    environment:
      MYSQL_DATABASE: hive
      MYSQL_USER: hiveadmin
      MYSQL_PASSWORD: hivepassword
      MYSQL_ROOT_PASSWORD: rootpw
    ports:
      - "3306:3306"
    volumes:
      - filestore_data:/var/lib/mysql
      # optional: add custom overrides here
      - ./db-conf.d:/etc/mysql/conf.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-prootpw"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend   # relative to gui/
    container_name: hive-backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    networks: [hivenet]

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    container_name: hive-frontend
    working_dir: /app
    command: npm run dev -- --host
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"                # Vite default; adjust as needed
    networks: [hivenet]

  # Optional: dev reverse proxy to unify ports
  devproxy:
    image: nginx:1.27-alpine
    depends_on: [backend, frontend]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "8080:80"
    networks: [hivenet]

networks:
  hivenet: {}
volumes:
  filestore_data: {}
